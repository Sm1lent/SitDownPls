"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}var t;t=function(){function e(e){var t=!0,n=!1,o=null,i={text:!0,search:!0,url:!0,tel:!0,email:!0,password:!0,number:!0,date:!0,month:!0,week:!0,time:!0,datetime:!0,"datetime-local":!0};function s(e){return!!(e&&e!==document&&"HTML"!==e.nodeName&&"BODY"!==e.nodeName&&"classList"in e&&"contains"in e.classList)}function r(e){e.classList.contains("focus-visible")||(e.classList.add("focus-visible"),e.setAttribute("data-focus-visible-added",""))}function d(e){t=!1}function c(){document.addEventListener("mousemove",a),document.addEventListener("mousedown",a),document.addEventListener("mouseup",a),document.addEventListener("pointermove",a),document.addEventListener("pointerdown",a),document.addEventListener("pointerup",a),document.addEventListener("touchmove",a),document.addEventListener("touchstart",a),document.addEventListener("touchend",a)}function a(e){e.target.nodeName&&"html"===e.target.nodeName.toLowerCase()||(t=!1,document.removeEventListener("mousemove",a),document.removeEventListener("mousedown",a),document.removeEventListener("mouseup",a),document.removeEventListener("pointermove",a),document.removeEventListener("pointerdown",a),document.removeEventListener("pointerup",a),document.removeEventListener("touchmove",a),document.removeEventListener("touchstart",a),document.removeEventListener("touchend",a))}document.addEventListener("keydown",(function(n){n.metaKey||n.altKey||n.ctrlKey||(s(e.activeElement)&&r(e.activeElement),t=!0)}),!0),document.addEventListener("mousedown",d,!0),document.addEventListener("pointerdown",d,!0),document.addEventListener("touchstart",d,!0),document.addEventListener("visibilitychange",(function(e){"hidden"===document.visibilityState&&(n&&(t=!0),c())}),!0),c(),e.addEventListener("focus",(function(e){var n,o,d;s(e.target)&&(t||(n=e.target,o=n.type,"INPUT"===(d=n.tagName)&&i[o]&&!n.readOnly||"TEXTAREA"===d&&!n.readOnly||n.isContentEditable))&&r(e.target)}),!0),e.addEventListener("blur",(function(e){var t;s(e.target)&&(e.target.classList.contains("focus-visible")||e.target.hasAttribute("data-focus-visible-added"))&&(n=!0,window.clearTimeout(o),o=window.setTimeout((function(){n=!1}),100),(t=e.target).hasAttribute("data-focus-visible-added")&&(t.classList.remove("focus-visible"),t.removeAttribute("data-focus-visible-added")))}),!0),e.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&e.host?e.host.setAttribute("data-js-focus-visible",""):e.nodeType===Node.DOCUMENT_NODE&&(document.documentElement.classList.add("js-focus-visible"),document.documentElement.setAttribute("data-js-focus-visible",""))}if("undefined"!=typeof window&&"undefined"!=typeof document){var t;window.applyFocusVisiblePolyfill=e;try{t=new CustomEvent("focus-visible-polyfill-ready")}catch(e){(t=document.createEvent("CustomEvent")).initCustomEvent("focus-visible-polyfill-ready",!1,!1,{})}window.dispatchEvent(t)}"undefined"!=typeof document&&e(document)},"object"===("undefined"==typeof exports?"undefined":e(exports))&&"undefined"!=typeof module?t():"function"==typeof define&&define.amd?define(t):t();var n=document.body,o=document.querySelector(".container"),i=document.querySelector("#choices-location");document.querySelector("#choices-data"),document.querySelector("#choices-categories");document.querySelectorAll('a[href*="#"]').forEach((function(e){e.addEventListener("click",(function(t){t.preventDefault();var n=e.getAttribute("href").substring(1);document.getElementById(n).scrollIntoView({behavior:"smooth",block:"start"})}))}));new Choices(i,{searchEnabled:!1,shouldSort:!1});var s=document.querySelector(".categories__control"),r=document.querySelector(".categories__dropdown");s.addEventListener("click",(function(){s.classList.toggle("is-active"),s.classList.contains("is-active")?(r.classList.add("is-opened"),r.style.maxHeight=r.scrollHeight+"px"):(r.removeAttribute("style"),setTimeout((function(){r.classList.remove("is-opened")}),450))}));new Swiper(".hero-swiper",{direction:"horizontal",slidesPerView:1,loop:!0,spaceBetween:10,pagination:{el:".hero-swiper__pagination",type:"bullets",clickable:!0},a11y:{prevSlideMessage:"Предыдущий слайд",nextSlideMessage:"Следующий слайд"},keyboard:!0}),new Swiper(".special-swiper",{slidesPerView:"auto",slidesPerGroup:3,navigation:{nextEl:".special__swiper-button-next",prevEl:".special__swiper-button-prev"},a11y:{prevSlideMessage:"Предыдущие слайды",nextSlideMessage:"Следующие слайды"},keyboard:!0}),new Swiper(".useful-swiper",{direction:"horizontal",slidesPerView:2,slidesPerGroup:2,spaceBetween:32,slideClass:"useful-swiper__slide",navigation:{nextEl:".useful__swiper-button-next",prevEl:".useful__swiper-button-prev"},a11y:{prevSlideMessage:"Предыдущие слайды",nextSlideMessage:"Следующие слайды"},keyboard:!0});var d=document.querySelector(".header__sec-menu");function c(){d.removeAttribute("style");var e=(o.offsetWidth-n.offsetWidth)/2;d.style.setProperty("--stripe-shift","".concat(e,"px")),d.style.setProperty("--stripe-width","".concat(n.offsetWidth,"px"))}c();var a=document.querySelectorAll(".rated__list-item"),u=document.querySelector(".rated__btn"),l=n.offsetWidth,m=l<1200?6:8,v=m;function f(e){if(8==e)for(var t=6;t<8;t++)a[t].classList.contains("hidden")&&p(a[t]);for(var n=e;n<=a.length;n++)a[n]&&(a[n].classList.contains("hidden")||y(a[n]))}function p(e){e.classList.remove("hidden")}function y(e){e.classList.add("hidden")}f(v),window.addEventListener("resize",(function(){c(),l=n.offsetWidth,console.log(l),u.classList.contains("hidden")||(m=l<1200?6:8)!=v&&f(v=m)}));u.addEventListener("click",(function e(){for(var t=1;t<5;t++){var n=document.querySelector(".rated__list-item.hidden");n?p(n):(u.removeEventListener("click",e),y(u))}}));var h=document.querySelector(".mail-us__tip-btn");h.addEventListener("click",(function(){h.classList.toggle("is-active")})),tippy(".mail-us__tip-btn",{trigger:"click",maxWidth:157,content:"Реплицированные с зарубежных источников, исследования формируют глобальную сеть."}),Inputmask("+7(999)-999-99-99").mask(document.querySelector("#phone"));var E=/^[А-Яа-я]+$/,b=/^[A-Za-z]+$/,L=document.querySelector("#phone"),w=document.querySelector("#name");new JustValidate(".mail-us-form",{colorValid:"#B8EC64",colorWrong:"#FF6972",rules:{name:{required:!0,minLength:3,maxLength:25,function:function(){var e=w.value;return e.match(E)||e.match(b)}},phone:{required:!0,function:function(e,t){var n=L.inputmask.unmaskedvalue();return Number(n)&&10===n.length}},email:{required:!0,email:email},check:{required:!0}},messages:{name:{required:"Как вас зовут?",minLength:"Введите минимум 3 символа",maxLength:"Введите не более 25 символов",function:"Допустимы только буквы кириллицы или латыни"},phone:{required:"Укажите ваш телефон",function:"Введите номер в десятизначном формате"},email:{required:"Укажите вашу почту",email:"Неверный формат"},check:{required:"Необходимо подтвердить"}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
